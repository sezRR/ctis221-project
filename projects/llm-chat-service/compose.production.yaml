version: '3.8'

services:
  postgres:
    restart: always
    image: 'postgres:17.4'
    environment:
      POSTGRES_DB: ${PG_DB}
      POSTGRES_PASSWORD: ${PG_PASSWORD}
      POSTGRES_USER: ${PG_USER}
    volumes:
      - type: bind
        source: ./scripts/init-multiple-dbs.sh
        target: /docker-entrypoint-initdb.d/init-multiple-dbs.sh
        read_only: true
    networks:
      - llm_service_network

  redis:
    restart: always
    image: 'redis:7.4.3'
    networks:
      - llm_service_network

  keycloak:
    image: quay.io/keycloak/keycloak:26.1.0
    command:
      - start-dev
      - --import-realm
    restart: always
    depends_on:
      - postgres
    volumes:
      - ./keycloak-import:/opt/keycloak/data/import
    environment:
      # Admin credentials
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}

      # Postgres DB
      KC_DB: postgres
      KC_DB_SCHEMA: public
      KC_DB_USERNAME: ${PG_USER}
      KC_DB_PASSWORD: ${PG_PASSWORD}
      KC_DB_URL: ${PG_URL}/keycloak

      # ─── Tell Keycloak your full public URL ───────────────────
      KC_HOSTNAME: "https://sezertetik.dev/auth"      # ← include https:// and /auth
      KC_HTTP_RELATIVE_PATH: "/auth"                   # ← serve under /auth

      # ─── Proxy & forwarded-header settings ────────────────
      KC_PROXY: edge                                   # trust Nginx as edge proxy
      KC_PROXY_HEADERS: forwarded                      # trust X-Forwarded-*

      # ─── Lock it down to HTTPS & correct host ─────────────
      KC_HOSTNAME_STRICT: "true"
      KC_HOSTNAME_STRICT_HTTPS: "true"
      KC_HTTP_ENABLED: "false"                         # disable HTTP inside container
    networks:
      - llm_service_network

  backend:
    restart: always
    build: .
    environment:
      SPRING_DOCKER_COMPOSE_ENABLED: "false"
      SPRING_PROFILES_ACTIVE: "prod,default"
      PG_DB: ${PG_DB}
      PG_URL: ${PG_URL}
      PG_USER: ${PG_USER}
      PG_PASSWORD: ${PG_PASSWORD}
      KEYCLOAK_CLIENT_SECRET: ${KEYCLOAK_CLIENT_SECRET}
      OPENROUTER_API_KEY: ${OPENROUTER_API_KEY}
    ports: []
    depends_on:
      - keycloak
      - postgres
    networks:
      - llm_service_network
      
  nginx:
    image: nginx:latest
    restart: always
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
      - keycloak
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    networks:
      llm_service_network:

  certbot:
    image: certbot/certbot
    profiles:
      - certgen
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    command: certonly --webroot -w /var/www/certbot --keep-until-expiring --email me@sezertetik.dev -d sezertetik.dev --agree-tos
    networks:
      llm_service_network:

networks:
  llm_service_network:
