services:
  postgres:
    image: 'postgres:latest'
    restart: always
    environment:
      - 'POSTGRES_DB=mydatabase'
      - 'POSTGRES_PASSWORD=secret'
      - 'POSTGRES_USER=myuser'
    ports:
      - '5432:5432'
    volumes:
      - ./scripts/init-multiple-dbs.sh:/docker-entrypoint-initdb.d/init-multiple-dbs.sh
    networks:
      llm_service_network:
        ipv4_address: 172.20.0.100

  pgadmin:
    image: dpage/pgadmin4:latest
    restart: always
    ports:
      - "5050:5050"
    depends_on:
      - postgres
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_LISTEN_PORT: 5050
    networks:
      llm_service_network:
        ipv4_address: 172.20.0.101

  redis:
    image: 'redis:latest'
    restart: always
    ports:
      - '6379:6379'
    networks:
      llm_service_network:
        ipv4_address: 172.20.0.102

  redis-insight:
    image: 'redis/redisinsight'
    restart: always
    ports:
      - '5540:5540'
    depends_on:
      - redis
    networks:
      llm_service_network:
        ipv4_address: 172.20.0.103

  keycloak:
    image: quay.io/keycloak/keycloak:26.1.0
    command:
      - start-dev
      - --import-realm
    restart: always
    depends_on:
      - postgres
    volumes:
      - ./keycloak-import:/opt/keycloak/data/import
    environment:
      # Admin credentials
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin

      # Postgres DB
      KC_DB: postgres
      KC_DB_SCHEMA: public
      KC_DB_USERNAME: myuser
      KC_DB_PASSWORD: secret
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak

      # ─── Tell Keycloak your full public URL ───────────────────
      KC_HOSTNAME: "https://sezertetik.dev/auth"      # ← include https:// and /auth
      KC_HTTP_RELATIVE_PATH: "/auth"                   # ← serve under /auth

      # ─── Proxy & forwarded-header settings ────────────────
      KC_PROXY: edge                                   # trust Nginx as edge proxy
      KC_PROXY_HEADERS: forwarded                      # trust X-Forwarded-*
      # (no longer need PROXY_ADDRESS_FORWARDING)

      # ─── Lock it down to HTTPS & correct host ─────────────
      KC_HOSTNAME_STRICT: "true"
      KC_HOSTNAME_STRICT_HTTPS: "true"
      KC_HTTP_ENABLED: "false"                         # disable HTTP inside container

    networks:
      llm_service_network:
        ipv4_address: 172.20.0.104


  backend:
    restart: always
    build:
      context: .
    ports: []
    environment:
      - SPRING_DOCKER_COMPOSE_ENABLED=false
    depends_on:
      - keycloak
      - postgres
    networks:
      llm_service_network:
        ipv4_address: 172.20.0.105

  nginx:
    image: nginx:latest
    restart: always
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
      - keycloak
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    networks:
      llm_service_network:

  certbot:
    image: certbot/certbot
    profiles:
      - certgen
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    command: certonly --webroot -w /var/www/certbot --keep-until-expiring --email me@sezertetik.dev -d sezertetik.dev --agree-tos
    networks:
      llm_service_network:

networks:
  llm_service_network:
    ipam:
      config:
        - subnet: 172.20.0.0/16

